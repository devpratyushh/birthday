@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), system-ui, sans-serif;
}

@layer base {
  :root {
    --background: 240 67% 97%; /* Light Lavender */
    --foreground: 240 10% 10%; /* Dark Grey/Black */

    --card: 240 67% 97%; /* Light Lavender */
    --card-foreground: 240 10% 10%; /* Dark Grey/Black */

    --popover: 240 67% 97%; /* Light Lavender */
    --popover-foreground: 240 10% 10%; /* Dark Grey/Black */

    --primary: 4 90% 70%; /* Coral-ish */
    --primary-foreground: 0 0% 100%; /* White */

    --secondary: 240 50% 94%; /* Slightly darker Lavender */
    --secondary-foreground: 240 10% 10%; /* Dark Grey/Black */

    --muted: 240 50% 94%; /* Slightly darker Lavender */
    --muted-foreground: 240 5% 55%; /* Grey */

    --accent: 351 100% 90%; /* Soft Pink - Adjusted lightness for better contrast */
    --accent-foreground: 351 100% 25%; /* Dark Pink */

    --destructive: 0 84.2% 60.2%; /* Default Red */
    --destructive-foreground: 0 0% 98%; /* Default Light */

    --border: 351 50% 92%; /* Light Pink/Grey */
    --input: 351 50% 92%; /* Light Pink/Grey */
    --ring: 4 90% 70%; /* Coral-ish */

    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    --radius: 0.8rem; /* Slightly more rounded */

    /* Sidebar colors (keeping defaults for now, as sidebar isn't explicitly requested) */
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    /* Define dark theme colors if needed, otherwise default */
    --background: 240 10% 10%; /* Dark Blue/Grey */
    --foreground: 0 0% 98%; /* Light Grey/White */

    --card: 240 10% 10%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 10%;
    --popover-foreground: 0 0% 98%;

    --primary: 4 80% 65%; /* Coral-ish (Darker) */
    --primary-foreground: 0 0% 100%; /* White */

    --secondary: 240 10% 20%; /* Darker Blue/Grey */
    --secondary-foreground: 0 0% 98%;

    --muted: 240 10% 20%;
    --muted-foreground: 240 5% 65%;

    --accent: 351 80% 70%; /* Pink (Darker) */
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 10% 25%;
    --input: 240 10% 25%;
    --ring: 4 80% 65%;

    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    /* Dark Sidebar colors */
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
    /* Smooth scrolling for anchors */
    scroll-behavior: smooth;
  }
  body {
    @apply bg-background text-foreground;
    min-height: 100vh;
    overflow-x: hidden; /* Prevent horizontal scroll on body */
  }

  /* Simple floating hearts animation */
  @keyframes float {
    0% { transform: translateY(0px) rotate(0deg); opacity: 1; }
    50% { transform: translateY(-25px) rotate(15deg); opacity: 0.7; }
    100% { transform: translateY(0px) rotate(0deg); opacity: 1; }
  }
  .animate-float {
    animation: float 4s ease-in-out infinite;
  }

  /* Simple twinkling stars animation */
   @keyframes twinkle {
    0%, 100% { opacity: 0.6; transform: scale(0.9); }
    50% { opacity: 1; transform: scale(1.1); }
  }
  .animate-twinkle {
    animation: twinkle 1.8s ease-in-out infinite;
  }

   /* Fade-in animation */
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .animate-fade-in {
    animation: fade-in 1s ease-out forwards;
  }

  /* Strikethrough animation */
  @keyframes strikethrough {
    0% { width: 0; }
    100% { width: 100%; }
  }
  .strikethrough-animated::after {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    height: 2px; /* Adjust thickness */
    background-color: hsl(var(--destructive)); /* Or use primary/accent color */
    animation: strikethrough 0.5s ease-out forwards;
    transform: translateY(-50%); /* Center the line vertically */
  }

   /* Text reveal/replace animation */
  @keyframes fade-out-up {
    from { opacity: 1; transform: translateY(0); }
    to { opacity: 0; transform: translateY(-10px); }
  }
  @keyframes fade-in-down {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .animate-fade-out-up {
    animation: fade-out-up 0.4s ease-out forwards;
  }
  .animate-fade-in-down {
    animation: fade-in-down 0.4s ease-in forwards;
  }

   /* Ping animation (single burst) */
  @keyframes ping-once {
    0% { transform: scale(1); opacity: 1; }
    75%, 100% { transform: scale(1.8); opacity: 0; }
  }
  .animate-ping-once {
    animation: ping-once 0.6s cubic-bezier(0, 0, 0.2, 1);
  }

   /* Faster pulse animation */
   @keyframes pulse-fast {
     50% {
       opacity: .7;
     }
   }
   .animate-pulse-fast {
     animation: pulse-fast 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
   }

   /* Text pulse animation for romantic phrases */
   @keyframes pulse-text {
       0%, 100% {
          text-shadow: 0 0 3px hsla(var(--primary), 0.5);
          transform: scale(1);
       }
       50% {
         text-shadow: 0 0 8px hsla(var(--primary), 0.8);
         transform: scale(1.03);
       }
    }
   .animate-pulse-text {
       animation: pulse-text 1.5s ease-in-out infinite;
   }

   /* Countdown flip animation */
   @keyframes flip-down {
      0% { transform: rotateX(0deg); }
      100% { transform: rotateX(-90deg); }
   }
   .animate-flip-down {
       /* Use forwards to maintain the end state */
       animation: flip-down 0.5s ease-in forwards;
   }
    @keyframes flip-up {
      0% { transform: rotateX(90deg); }
      100% { transform: rotateX(0deg); }
   }
   .animate-flip-up {
       /* Use forwards to maintain the end state */
       animation: flip-up 0.5s ease-out forwards;
       /* Removed delay, handled by state in component */
       /* animation-delay: 0.5s; */
   }

    /* Utilities for 3D transforms (if not included by default) */
   .perspective-\\[500px\\] { perspective: 500px; }
   .transform-style-3d { transform-style: preserve-3d; }
   .backface-hidden { backface-visibility: hidden; -webkit-backface-visibility: hidden; } /* Add vendor prefix */


    /* Horizontal timeline styles */
   .horizontal-timeline {
    overflow-x: auto; /* Enable horizontal scroll */
    overflow-y: hidden; /* Prevent vertical scroll on this element */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    scroll-snap-type: x mandatory; /* Optional: Snap scrolling */
    scroll-padding-left: 5vw; /* Ensure start padding is respected for snap */
    scroll-padding-right: 5vw; /* Ensure end padding is respected for snap */
    position: relative; /* Needed for absolute positioning of line/icons */
    width: 100vw; /* Take full viewport width */
    margin-left: -50vw; /* Center trick: move left by half viewport width */
    left: 50%; /* Center trick: align left edge to center */
    padding-top: 2rem;
    padding-bottom: 4rem; /* More space below */
    /* Remove whitespace nowrap if causing issues with flex gap */
    /* white-space: nowrap; */ /* Keep items in one line */
   }
   .horizontal-timeline::-webkit-scrollbar {
      display: none; /* Chrome, Safari, Opera */
   }

    .timeline-content {
      display: inline-flex; /* Use inline-flex to keep items horizontal and allow gap */
      gap: 1rem; /* Space between timeline cards */
      position: relative; /* Context for absolute positioned line/icons */
      padding-left: 5vw; /* Padding inside the scrolling content */
      padding-right: 5vw; /* Padding inside the scrolling content */
      min-width: max-content; /* Ensure container is wide enough for all cards */
   }

    /* Styles for the central line in horizontal timeline */
    .horizontal-timeline-line {
      position: absolute;
      left: 5vw; /* Start line after left padding */
      right: 5vw; /* End line before right padding */
      top: calc(50% + 2rem); /* Adjust vertical position based on padding-top */
      height: 4px; /* Line thickness */
      background: linear-gradient(to right, transparent, hsl(var(--primary)/0.4), transparent); /* Faded line */
      transform: translateY(-50%);
      z-index: 1; /* Behind cards but visible */
      pointer-events: none; /* Don't interfere with scrolling */
    }

     /* Styles for the icons on the horizontal line */
    .horizontal-timeline-icon {
       position: absolute;
       top: calc(50% + 2rem); /* Match line's vertical position */
       /* left position will be calculated dynamically via style prop */
       transform: translate(-50%, -50%); /* Center the icon */
       background-color: hsl(var(--background));
       padding: 0.5rem; /* p-2 */
       border-radius: 9999px; /* rounded-full */
       border: 2px solid hsl(var(--primary));
       box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1); /* shadow-md */
       z-index: 10; /* Above the line and cards */
       transition: transform 0.3s ease-out;
       cursor: pointer; /* Indicate interactivity */
    }
     .horizontal-timeline-icon:hover {
        transform: translate(-50%, -50%) scale(1.1); /* Slightly enlarge on hover */
     }

    /* Ensure cards have width and don't shrink unexpectedly */
   .timeline-card {
     flex-shrink: 0; /* Prevent cards from shrinking */
     width: 300px; /* Fixed width for consistency */
     max-width: 350px;
     scroll-snap-align: center; /* Optional: Center card on snap */
     /* Removed inline-block, flex handles layout */
     white-space: normal; /* Allow text wrapping inside cards */
     vertical-align: top; /* Align cards to the top if flex not used*/
     height: auto; /* Allow card height to adjust to content */
   }

   /* Removed focus ring and elastic scroll JS-dependent styles for simplification */
   /* .timeline-focus-ring { ... } */
   /* .scroll-container { ... } */
   /* .scroll-content { ... } */
}
